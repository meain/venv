#!/bin/sh

set -e

command -v mkvirtualenv || . "$(command -v virtualenvwrapper.sh)"

DEFAULT_VENV_PYTHON_VERSION=${DEFAULT_VENV_PYTHON_VERSION:-"3.6.6"}
PYENV_ROOT=${PYENV_ROOT:-"$HOME/.pyenv"}

# select from available versions
PYVERSION=$(pyenv versions | {
  echo "  Default ($DEFAULT_VENV_PYTHON_VERSION)"
  tail -n +2 | grep -v "$DEFAULT_VENV_PYTHON_VERSION"
  echo '  Other ( Install from pyenv )'
} | fzf --no-sort | sed 's/^ *//')
[ -z "$PYVERSION" ] && exit 0

# install if not available
if [ "$PYVERSION" = 'Other ( Install from pyenv )' ]; then
  PYVERSION=$(pyenv install -l | tail -n +2 | fzf --no-sort | sed 's/^ *//')
  [ -z "$PYVERSION" ] && exit 0
  pyenv install "$PYVERSION"
elif [ "$PYVERSION" = "Default ($DEFAULT_VENV_PYTHON_VERSION)" ]; then
  PYVERSION=$DEFAULT_VENV_PYTHON_VERSION
fi
PYNAME=$(readlink "$PYENV_ROOT/versions/$PYVERSION/bin/python")

[ -z "$PYVERSION" ] && exit 0
if [ -z "$1" ]; then
  printf "Virtualenv name: "
  read -r && VIRTUALENVNAME="$REPLY"
else
  VIRTUALENVNAME=$1
fi

mkvirtualenv "$VIRTUALENVNAME" -p "$PYENV_ROOT/versions/$PYVERSION/bin/$PYNAME"
